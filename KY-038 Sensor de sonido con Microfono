import network
from umqtt.simple import MQTTClient
from machine import Pin, ADC
import time

# Configuración WiFi
WIFI_SSID = "OmarNamekusei"
WIFI_PASSWORD = "linux123"

# Configuración MQTT
MQTT_BROKER = "192.168.137.237"
MQTT_CLIENT_ID = "ESP32_Micro"
MQTT_TOPIC = "iot/sonidoMicrofono"
MQTT_PORT = 1883

# Configurar sensor en GPIO33
sensor = ADC(Pin(33))
sensor.atten(ADC.ATTN_11DB)  # Configurar rango 0-3.3V

# Conectar a WiFi
def conectar_wifi():
    sta_if = network.WLAN(network.STA_IF)
    sta_if.active(True)
    sta_if.connect(WIFI_SSID, WIFI_PASSWORD)
    for _ in range(30):  # Esperar 9 segundos máximo
        if sta_if.isconnected():
            print("WiFi conectada!")
            return
        time.sleep(0.3)
    print("Error: No se pudo conectar a WiFi")
    return

# Conectar a MQTT
def conectar_broker():
    try:
        client = MQTTClient(MQTT_CLIENT_ID, MQTT_BROKER, port=MQTT_PORT)
        client.connect()
        print(f"Conectado a MQTT Broker: {MQTT_BROKER}, Topic: {MQTT_TOPIC}")
        return client
    except Exception as e:
        print(f"Error al conectar con MQTT: {e}")
        return None

# Iniciar conexiones
conectar_wifi()
client = conectar_broker()

ultimo_valor = sensor.read()

# Bucle principal
while True:
    valores = [sensor.read() for _ in range(10)]  # Leer varias veces
    promedio = sum(valores) // len(valores)

    if abs(promedio - ultimo_valor) > 100:
        print(f"Nivel de sonido: {promedio}")
        if client:
            client.publish(MQTT_TOPIC, str(promedio))
        ultimo_valor = promedio

    time.sleep(0.1)

