import network
from umqtt.simple import MQTTClient
from machine import Pin
import time

# Configuraci√≥n WiFi
WIFI_SSID = "OmarNamekusei"
WIFI_PASSWORD = "linux123"

# Configuraci√≥n MQTT
MQTT_BROKER = "192.168.137.237"
MQTT_CLIENT_ID = "esp32_buzzerActivo"
MQTT_TOPIC = "iot/buzzerActivo"
MQTT_PORT = 1883

# Configurar el buzzer activo (GPIO4)
buzzer = Pin(4, Pin.OUT)

# Patr√≥n de sonido (simulaci√≥n de "melod√≠a" con pulsos)
melodia = [
    (1, 300), (0, 100),  # Encender 300ms, apagar 100ms
    (1, 300), (0, 100),
    (1, 300), (0, 100),
    (1, 600), (0, 200),  # Nota larga
    (1, 300), (0, 100),
    (1, 300), (0, 100),
    (1, 600), (0, 200)   # Nota larga
]

# Funci√≥n para conectar a WiFi
def conectar_wifi():
    sta_if = network.WLAN(network.STA_IF)
    sta_if.active(True)
    sta_if.connect(WIFI_SSID, WIFI_PASSWORD)
    
    for _ in range(30):  # Esperar 9 segundos m√°ximo
        if sta_if.isconnected():
            print("‚úÖ WiFi conectada!")
            return
        time.sleep(0.3)
    
    print("‚ö† Error: No se pudo conectar a WiFi")

# Funci√≥n para conectar al broker MQTT
def conectar_broker():
    global client
    try:
        client = MQTTClient(MQTT_CLIENT_ID, MQTT_BROKER, port=MQTT_PORT)
        client.connect()
        print(f"‚úÖ Conectado a MQTT Broker: {MQTT_BROKER}, Topic: {MQTT_TOPIC}")
    except Exception as e:
        print(f"‚ö† Error al conectar con MQTT: {e}")
        client = None

# Funci√≥n para reproducir la "melod√≠a"
def reproducir_melodia():
    for estado, duracion in melodia:
        buzzer.value(estado)  # Encender o apagar el buzzer
        time.sleep(duracion / 1000)  # Convertir milisegundos a segundos

# Conectar a WiFi y MQTT
conectar_wifi()
conectar_broker()

# Bucle principal: Reproducir la "melod√≠a" y enviar estado a MQTT
while True:
    try:
        print("üéµ Reproduciendo melod√≠a...")
        reproducir_melodia()
        
        if client:  # Si hay conexi√≥n MQTT
            try:
                client.publish(MQTT_TOPIC, "Melod√≠a reproducida".encode())
                print("‚úÖ Mensaje MQTT enviado")
            except Exception as e:
                print(f"‚ö† Error al enviar MQTT: {e}")
                conectar_broker()  # Intentar reconectar
        
        time.sleep(5)  # Esperar antes de repetir la melod√≠a
        
    except Exception as e:
        print(f"‚ö† Error en bucle principal: {e}")
        time.sleep(3)
